import { stripe } from '@/lib/stripe';
import type { NextApiRequest, NextApiResponse } from 'next';

import { NextResponse } from 'next/server';

export async function POST(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== 'POST') {
      return NextResponse.json({ error: 'Method Not Allowed' }, { status: 405 });
    }

    const { productName, amount, discount, currency = 'aed' } = req.body;

    if (!productName || !amount || discount === undefined) {
      return NextResponse.json({ error: 'Missing required parameters' }, { status: 400 });
    }

    const discountPercentage = discount ? 1 - (Number(discount) / 100) : 1;
    const discountedAmount = Math.round(Number(amount) * 100 * discountPercentage);

    const product = await stripe.products.create({
      name: productName,
      description: `Special offer: ${discount}% off on ${productName}`,
    });

    const price = await stripe.prices.create({
      unit_amount: discountedAmount,
      currency,
      product: product.id,
    });

	 console.log(`Created price: ${price.id}`);

    const paymentLink = await stripe.paymentLinks.create({
      line_items: [{
        price: price.id,
        quantity: 1,
      }],
    });

    return NextResponse.json({ url: paymentLink.url }, { status: 200 });
  } catch (error) {
    console.error(error);
    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
  }
}
